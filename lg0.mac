	;
	; MONSTER STRUCTURE:
	; TYPE:	BYTE		(1) 0
	; CURFR: BYTE		(1) 1
	; MAXFR: BYTE		(1) 2
	; IN MAP OFFSET: BYTE	(1) 3 0..255 (map 16x16)
	; POSX:	WORD		(2) 4
	; POSY:	WORD		(2) 6
	; ANGLE: WORD		(2) 8
	; DISTANCE: WORD	(2) 10
	;
	; NOTE:	CURFR -	CURRENT	ANIMATION FRAME
	;	MAXFR -	NUMBER OF ANIMATION FRAMES
	; TYPE:
	; 0: DO	NOT PROCESS (EMPTY SLOT)
	; 1: HUNTER
	; 2: HIT
	; 3: PROJECTILE	PLAYER->HUNTER
	; 4: PROJECTILE	HUNTER->PLAYER
	; 5: AMMO
	;
	; SUBROUTINES FOR 1 STEP MOVE
MNPRCS:	.WORD MHNTR,MHIT,MPROJ1,MPROJ2,MAMMO
	;
	; CLEAR	ACTORS BUFFER
CLMNBF:	MOV #MNBF,R5
1$:	CLR (R5)+
	CMP #MNBFE,R5
	BNE 1$
	RET
	;
	; SET POSITION (SAME PROC.FOR ALL)
SETIPS:	CALL FRN
	MOV RAN,R0
	BIC #176000,R0
	CALL FRN
	MOV RAN,R1
	BIC #176000,R1
	CALL FRN
	CALL CHECK
	BNE SETIPS
	MOV RAN,R2
	BIC #177600,R2		; 0..127
	CMP R2,#72.
	BLO 1$
	SUB #72.,R2
1$:	MOV R2,8.(R5)		; ANGLE
	MOV R0,4.(R5)		; POSX
	MOV R1,6.(R5)		; POSY
	CALL CHECKP
	MOVB R2,3.(R5)		; OFFSET
	CMPB VIS(R2),FRCNTR	; DO NOT RESPAWN IN
	BEQ SETIPS		; VISIBLE AREA
	; RANDOMIZE ANIMATIONS
	MOV R0,-(SP)
	CALL FRN
	MOV RAN,R0
	BIC #177760,R0
	CMPB R0,2.(R5)
	BLO 2$
	CLR R0
2$:	MOVB R0,1.(R5)
	MOV (SP)+,R0
	RET
	;
	; SET HUNTERS
SETHNT:	MOV #MNBF,R5
1$:	MOVB #1.,(R5)		; TYPE=HUNTER
	CLRB 1.(R5)		; CURRENT FRAME=0
	MOV HNTRS,R0		; GET NUM OF FRAMES
	MOVB R0,2.(R5)		; SET NUM OF FRAMES
	CALL SETIPS
	MOVB #255.,MAP(R2)	; TEMP MARK
	ADD #MNRS,R5
	CMP #MNBFS,R5
	BNE 1$
	RET
	;
	; SET AMMOS
SETAMM:	MOV #MNBFX,R5
1$:	MOVB #5.,(R5)		; TYPE=AMMO
	CLRB 1.(R5)		; CURRENT FRAME=0
	MOV AMMOS,R0		; GET NUM OF FRAMES
	MOVB R0,2.(R5)		; SET NUM OF FRAMES
	CALL SETIPS
	MOVB #255.,MAP(R2)	; TEMP MARK
	ADD #MNRS,R5
	CMP #MNBFE,R5
	BNE 1$
	RET
	;
	; CLEAR	TEMP MARKS
CLTMRK:	MOV #MAP,R5
	MOV #256.,R4
1$:	CMPB (R5),#255.
	BNE 2$
	CLRB (R5)
2$:	INC R5
	SOB R4,1$
	RET
	;
	; ACTORS INITIAL SETUP
MNSET:	CALL MSKSIN
	CALL CLMNBF
	CALL SETHNT
	CALL SETAMM
	CALL CLTMRK
	RET
	;
NEXTFR:	BIT SKIP,#3.	; 1/4
	BNE 1$
	INCB 1.(R5)
	CMPB 1.(R5),2.(R5)
	BNE 1$
	CLRB 1.(R5)
1$:	RET
MHNTR:	MOV 8.(R5),R0
	CALL GSNCS
	ASR R0	; SLOW BY X2
	ASR R1	; SLOW BY X2
	;CLR R0
	;CLR R1
	ADD 4.(R5),R0
	ADD 6.(R5),R1
	CALL CHECK
	BNE 1$
	MOV R0,4.(R5)
	MOV R1,6.(R5)
	CALL CHECKP
	MOVB R2,3.(R5)
	BR 2$
1$:	CALL FRN
	MOV RAN,R2
	BIC #177600,R2	; 0..127
	CMP R2,#72.
	BLO 3$
	SUB #72.,R2
3$:	MOV R2,8.(R5)	; NEW ANGLE
	CMP GSTATE,#GSHTWN
	BNE 2$
	CMP R5,#MNBF
	BNE 2$
	CALL CORRA
2$:	CALL NEXTFR
	RET
MHIT:	CALL NEXTFR
	BNE 1$
	CLRB (R5) ; GOTO INTO EMPTY
1$:	RET
	; HUNTER->PLAYER
	; IN R0,R1 COORDS
	; OUT R2=0 NO HIT OR R2>0 HIT
HPCHK:	CLR R2
	CMP GSTATE,#GSGAME
	BNE 5$
	MOV R0,-(SP)
	MOV R1,-(SP)
	SUB PLX,R0
	BPL 1$
	NEG R0
1$:	SUB PLY,R1
	BPL 2$
	NEG R1
2$:	CMP R0,#HITRAD
	BHI 4$
	CMP R1,#HITRAD
	BHI 4$
	MOVB SCORE,R0
	INCB R0
	CMPB R0,#SCLIM
	BLO 3$
	; HUNTERS WON: CHANGE GAME STATE,PRINT MESSAGE
	MOV #GSHTWN,GSTATE
	MOV R0,-(SP)
	MOV R2,-(SP)
	MOV R3,-(SP)
	MOV R5,-(SP)
	;MOV #2,R5
	;CALL PRNMS
	;MOV #3,R5
	;CALL PRNMS
	BISB #16.,BITFLD
	CALL CORRA
	MOV (SP)+,R5
	MOV (SP)+,R3
	MOV (SP)+,R2
	MOV (SP)+,R0
	;
3$:	MOVB R0,SCORE
	INC R2
4$:	MOV (SP)+,R1
	MOV (SP)+,R0
5$:	RET
	; DESTROY ALL HUNTERS
DALL:	MOV #MNBF,R5
1$:	TSTB (R5)
	BEQ 2$
	MOVB #2.,(R5)
	CLRB 1.(R5)
	MOV HITS,R0
	MOVB R0,2.(R5)
	MOV #H_SND,R0
	CALL SCH2
2$:	ADD #MNRS,R5
	CMP #MNBFS,R5
	BNE 1$
	RET
	; PLAYER->HUNTER
	; IN R0,R1 COORDS
	; OUT R2=0 IF NO HIT ELSE R2=MONSTER PTR
PHCHK:	CLR R2
	CMP GSTATE,#GSGAME
	BNE 7$
	MOV R0,-(SP)
	MOV R1,-(SP)
	MOV R5,-(SP)
	MOV #MNBF,R5
1$:	TSTB (R5)
	BEQ 2$
	MOV 4(SP),R0
	MOV 2(SP),R1
	SUB 4(R5),R0
	BPL 3$
	NEG R0
3$:	SUB 6(R5),R1
	BPL 4$
	NEG R1
4$:	CMP R0,#HITRAD
	BHI 2$
	CMP R1,#HITRAD
	BHI 2$
	MOVB SCORE+1,R0
	INCB R0
	CMPB R0,#SCLIM
	BLO 5$
	; PLAYER WON: CHANGE GAME STATE,PRINT MESSAGE
	MOV #GSPLWN,GSTATE
	MOV R0,-(SP)
	MOV R3,-(SP)
	;MOV #1,R5
	;CALL PRNMS
	;MOV #3,R5
	;CALL PRNMS
	BISB #32.,BITFLD
	CALL DALL
	MOV (SP)+,R3
	MOV (SP)+,R0
	CLR R5
	;
5$:	MOVB R0,SCORE+1
	MOV R5,R2
	BR 6$
2$:	ADD #MNRS,R5
	CMP #MNBFS,R5
	BNE 1$
6$:	MOV (SP)+,R5
	MOV (SP)+,R1
	MOV (SP)+,R0
7$:	RET
MPROJ1:	MOV 8.(R5),R0
	CALL GSNCS2
	ADD 4.(R5),R0
	ADD 6.(R5),R1
	; CHECK	HITS TARGET
	CMPB (R5),#4.
	BNE 4$
	CALL HPCHK
	TST R2
	BEQ 5$ ; NO HIT
	; EFFECT - DROP	PLAYER BACKWARD
	MOV 8.(R5),R0
	CALL GSNCS
	CALL DUP2
	BR 1$  ; HIT SOUND&FL.EFFECT
4$:	CALL PHCHK
	TST R2
	BEQ 5$
	; COPY POSITION
	MOV 4.(R2),4.(R5)
	MOV 6.(R2),6.(R5)
	; WE HIT MONSTER -> SPAWN NEW ONE
	MOV R5,-(SP)
	MOV R2,R5
	CALL SETIPS
	MOV (SP)+,R5
	BR 1$
5$:	CALL CHECK
	BNE 1$
	MOV R0,4.(R5)
	MOV R1,6.(R5)
	CALL CHECKP
	MOVB R2,3.(R5)
	BR 2$
1$:	MOVB #2.,(R5) ;	GOTO INTO HIT
	CLRB 1.(R5)
	MOV HITS,R0
	MOVB R0,2.(R5)
	MOV #H_SND,R0
	CALL SCH2
	BR 3$
2$:	CALL NEXTFR
3$:	RET
MPROJ2:	JMP MPROJ1 ; SAME AS MPROJ1
MAMMO:	CMPB AMMO,#10. ; IF ALWAYS FULL	AMMO
	BEQ 3$	       ; DO NOTHING
	MOV PLX,R0
	MOV PLY,R1
	SUB 4.(R5),R0
	BPL 1$
	NEG R0
1$:	SUB 6.(R5),R1
	BPL 2$
	NEG R1
2$:	CMP R0,#HITRAD
	BHI 3$
	CMP R1,#HITRAD
	BHI 3$
	MOVB #10.,AMMO ; WE GOT	FULL AMMO NOW
	CALL SETIPS
	MOV #A_SND,R0
	CALL SCH2
3$:	JMP NEXTFR ; ONLY NEXT FRAME
	;
	; MAKE 1 STEP MOVE
MNMOV:	MOV #MNBF,R5
1$:	MOVB (R5),R0
	BEQ 2$
	ASL R0
	CALL @MNPRCS-2(R0)
2$:	ADD #MNRS,R5
	CMP #MNBFE,R5
	BNE 1$
	RET
	;
	; DO FIRE (PLAYER->HUNTER)
DPROJ1:	CMP GSTATE,#GSHTWN
	BEQ 3$
	TSTB AMMO
	BEQ 3$
	DECB AMMO
	MOV #MNBFS,R5
1$:	TSTB (R5)
	BNE 2$
	MOVB #3.,(R5)
	CLRB 1.(R5)
	MOV PLX,R0
	MOV PLY,R1
	MOV R0,4.(R5)
	MOV R1,6.(R5)
	MOV PLA,8.(R5)
	CALL CHECKP
	MOVB R2,3.(R5)
	MOV #F_SND,R0
	CALL SCH2
	BR 3$
2$:	ADD #MNRS,R5
	CMP #MNBFX,R5
	BNE 1$
3$:	RET
	;
	; DO FIRE (HUNTER->PLAYER)
	; NEED SAVE&RESTORE REGISTERS
	; IN R5	- HUNTER THAT FIRES INTO PLAYER
DPROJ2:	BIT SKIP,#3	; 1/4 TODO: EASY, NORMAL, NIGHTMARE...
	BNE 3$
	CMPB #1.,(R5)
	BNE 3$ ; IF NOT	HUNTER -> SKIP
	CMP GSTATE,#GSHTWN
	BEQ 3$
	CALL FRN
	CMP RAN,#4096.
	BHI 3$ ; RANDOM	DELAY
	MOV R0,-(SP)
	MOV R1,-(SP)
	MOV R2,-(SP)
	MOV R4,-(SP)
	; NOW FIND EMPTY SLOT
	MOV #MNBFS,R4
1$:	TSTB (R4)
	BNE 2$
	MOVB #4.,(R4)
	CLRB 1.(R4)
	MOV 4.(R5),R0
	MOV 6.(R5),R1
	MOV R0,4.(R4)
	MOV R1,6.(R4)
	CALL CHECKP
	MOVB R2,3.(R4)
	CALL GETANG
	MOV #F_SND,R0
	CALL SCH2
	BR 4$
2$:	ADD #MNRS,R4
	CMP #MNBFX,R4
	BNE 1$
4$:	MOV (SP)+,R4
	MOV (SP)+,R2
	MOV (SP)+,R1
	MOV (SP)+,R0
3$:	RET
	;
	; COPY FOR DRAWING
MNSYNC:	MOV #MNBF,R0
	MOV #SMNBF,R1
1$:	MOV (R0)+,(R1)+	; x12
	MOV (R0)+,(R1)+
	MOV (R0)+,(R1)+
	MOV (R0)+,(R1)+
	MOV (R0)+,(R1)+
	MOV (R0)+,(R1)+
	CMP R0,#MNBFE
	BNE 1$
	RET
	;
MNBF:	.BLKB 60.		; HUNTERS (5.)
MNBFS:	.BLKB 180.		; PROJECTILES (15.)
MNBFX:	.BLKB 120.		; AMMOS	(10.)
MNBFE:				; END OF ALL ACTORS
SMNBF:	.BLKB 60.+180.+120.	; FOR SYNC DATA
SMNBFE:	NOP			; JUST FOR MARKER
	;
